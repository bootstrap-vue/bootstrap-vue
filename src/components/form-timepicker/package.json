{
  "name": "@bootstrap-vue/form-timepicker",
  "version": "1.0.0",
  "meta": {
    "title": "Form Timepicker",
    "description": "BootstrapVue custom time picker input form control, which provides full WAI-ARIA accessibility (a11y) and supports internationalization (i18n)",
    "new": true,
    "version": "2.6.0",
    "components": [
      {
        "component": "BFormTimepicker",
        "version": "2.6.0",
        "aliases": [
          "BTimepicker"
        ],
        "props": [
          {
            "prop": "value",
            "description": "Initially selected time value. Accepts a `HH:mm:ss` string. Valid value ranges from `00:00:00` to `23:59:59`"
          },
          {
            "prop": "resetValue",
            "description": "When the optional `reset` button is clicked, the selected time will be set to this value. Default is to clear the selected value"
          },
          {
            "prop": "disabled",
            "description": "Places the timepicker in a non-interactive disabled state"
          },
          {
            "prop": "readonly",
            "description": "Places the timepicker in an interactive readonly state. Disables updating the v-model, while still allowing focusing of spin buttons"
          },
          {
            "prop": "required",
            "description": "When set, adds the `aria-required=\"true\"` attribute on the component. Required validation needs to be handled by your application"
          },
          {
            "prop": "showSeconds",
            "description": "When true, shows the seconds spinbutton. If `false` the seconds spin button will not be shown and the seconds portion of the time will always be `0`"
          },
          {
            "prop": "hour12",
            "description": "Tri-state prop. If `true` forces the interface to 12 hour format. If `false` forces the interface into 24 hour format. If `null` the current locale will determine the 12 or 24 hour interface (default)"
          },
          {
            "prop": "locale",
            "description": "Locale (or locales) for the component to use. When passing an array of locales, the order of the locales is from most preferred to least preferred. If not provided, defaults to the clients default locale"
          },
          {
            "prop": "secondsStep",
            "description": "Step value for the seconds spinbutton. Should be a value evenly divided into 60"
          },
          {
            "prop": "minutesStep",
            "description": "Step value for the minutes spinbutton. Should be a value evenly divided into 60"
          },
          {
            "prop": "hideHeader",
            "description": "When set, visually hides the selected time header"
          },
          {
            "prop": "hideHeader",
            "description": "When set, visually hides the selected date header"
          },
          {
            "prop": "buttonOnly",
            "version": "2.7.0",
            "description": "Renders the datepicker as a dropdown button instead of a form-control"
          },
          {
            "prop": "buttonVariant",
            "version": "2.7.0",
            "description": "The button variant to use when in `button-only` mode. Has no effect if prop `button-only` is not set"
          },
          {
            "prop": "menuClass",
            "description": "Class (or classes) to apply to to popup menu wrapper"
          },
          {
            "prop": "nowButton",
            "description": "When set, shows the optional `select now` button"
          },
          {
            "prop": "nowButtonVariant",
            "description": "Button variant to use for the optional `select today` button"
          },
          {
            "prop": "labelNowButton",
            "settings": true,
            "description": "Content for the optional `Select now` button"
          },
          {
            "prop": "resetButton",
            "settings": true,
            "description": "When set, shows the optional `reset` button"
          },
          {
            "prop": "resetButtonVariant",
            "description": "Button variant to use for the optional `reset` button"
          },
          {
            "prop": "labelResetButton",
            "settings": true,
            "description": "Content for the optional `Reset` button"
          },
          {
            "prop": "noCloseButton",
            "description": "When set, disables showing the close button"
          },
          {
            "prop": "closeButtonVariant",
            "description": "Button variant to use for the optional `close` button"
          },
          {
            "prop": "labelCloseButton",
            "description": "Content for the `Close` button"
          },
          {
            "prop": "labelNoTimeSelected",
            "settings": true,
            "description": "String to show when no time is selected"
          },
          {
            "prop": "labelSelected",
            "settings": true,
            "description": "Hidden sr-only string when a time is selected"
          },
          {
            "prop": "labelIncrement",
            "settings": true,
            "description": "Value of the `aria-label` attribute on the spinbuttons `+` button"
          },
          {
            "prop": "labelDecrement",
            "settings": true,
            "description": "Value of the `aria-label` attribute on the spinbuttons `-` button"
          },
          {
            "prop": "labelHours",
            "settings": true,
            "description": "Value of the `aria-label` attribute on the `Hours` spinbutton"
          },
          {
            "prop": "labelMinutes",
            "settings": true,
            "description": "Value of the `aria-label` attribute on the `Minutes` spinbutton"
          },
          {
            "prop": "labelSeconds",
            "settings": true,
            "description": "Value of the `aria-label` attribute on the `Seconds` spinbutton"
          },
          {
            "prop": "labelAmpm",
            "settings": true,
            "description": "Value of the `aria-label` attribute on the `AM/PM` spinbutton"
          },
          {
            "prop": "labelAm",
            "settings": true,
            "description": "Text to display in the AM/PM spinbutton when 'AM' is selected"
          },
          {
            "prop": "labelPm",
            "settings": true,
            "description": "Text to display in the AM/PM spinbutton when 'PM' is selected"
          },
          {
            "prop": "dropup",
            "description": "When set, positions the menu on the top of the button"
          },
          {
            "prop": "dropright",
            "description": "When set, positions the menu to the right of the button"
          },
          {
            "prop": "dropleft",
            "description": "When set, positions the menu to the left of the button"
          },
          {
            "prop": "right",
            "description": "Align the right edge of the menu with the right of the button"
          },
          {
            "prop": "noFlip",
            "description": "Prevent the menu from auto flipping positions"
          },
          {
            "prop": "offset",
            "description": "Specify the number of pixels to shift the menu by. Negative values supported"
          },
          {
            "prop": "popperOpts",
            "description": "Additional configuration to pass to Popper.js"
          },
          {
            "prop": "boundary",
            "description": "The boundary constraint of the menu: `'scrollParent'`, `'window'`, `'viewport'`, or a reference to an `HTMLElement`"
          },
          {
            "prop": "placeholder",
            "description": "Text so show in the form control when no date is selected. Defaults to the `label-no-date-selected` prop value"
          }
        ],
        "events": [
          {
            "event": "input",
            "description": "Emitted when updating the v-model",
            "args": [
              {
                "arg": "time",
                "description": "A string in the format of `HH:mm:ss` (24 hour format)",
                "type": [
                  "String",
                  "Date"
                ]
              }
            ]
          },
          {
            "event": "context",
            "description": "`b-time` context event. Emitted when the user changes any spinbutton value via mouse or cursor control. Also emitted when the component is first instantiated, or the locale is changed",
            "args": [
              {
                "arg": "context",
                "description": "The `b-time` context object. See the `b-time` documentaion for details",
                "type": "Object"
              }
            ]
          },
          {
            "event": "shown",
            "version": "2.9.0",
            "description": "Emitted when the picker popup has shown"
          },
          {
            "event": "hidden",
            "version": "2.9.0",
            "description": "Emitted when the picker popup has hidden"
          }
        ],
        "slots": [
          {
            "name": "button-content",
            "description": "Content to place in the timepicker's icon button",
            "scope": [
              {
                "prop": "isHovered",
                "type": "Boolean",
                "description": "`true` if the component is hovered"
              },
              {
                "prop": "hasFocus",
                "type": "Boolean",
                "description": "`true` if the timepicker icon button has focus"
              },
              {
                "prop": "state",
                "type": "Boolean",
                "description": "The value of the `state` prop. `true` (valid), `false` (invalid), or `null`"
              },
              {
                "prop": "open",
                "type": "Boolean",
                "description": "The visibility state of the popup. `true` if the popup is visible and `false` if not"
              }
            ]
          }
        ]
      }
    ]
  }
}
