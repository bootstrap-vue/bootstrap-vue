{
  "name": "@bootstrap-vue/form-spinbutton",
  "version": "1.0.0",
  "meta": {
    "title": "Form Spinbutton",
    "version": "2.5.0",
    "description": "BootstrapVue custom numerical spinbutton form input component, featuring WAI-ARIA accessibility (a11y) and internationalization (i18n).",
    "components": [
      {
        "component": "BFormSpinbutton",
        "version": "2.5.0",
        "aliases": [
          "BSpinbutton"
        ],
        "props": [
          {
            "prop": "ariaLabel",
            "description": "Value to place in the `aria-label` attribute of the spinbutton"
          },
          {
            "prop": "disabled",
            "description": "Places the component in a disabled state"
          },
          {
            "prop": "formatterFn",
            "description": "A reference to a method to format the displayed value. It is passed a single argument which is the current value"
          },
          {
            "prop": "inline",
            "description": "When set, renders the component as an inline element"
          },
          {
            "prop": "labelDecrement",
            "description": "Text to be used for the `aria-label` attribute on the decrement button"
          },
          {
            "prop": "labelIncrement",
            "description": "Text to be used for the `aria-label` attribute on the increment button"
          },
          {
            "prop": "locale",
            "description": "Specify the local to use for formatting the number. Defaults to the browser locale. Only applicable when using the internal formatter"
          },
          {
            "prop": "max",
            "description": "The maximum value that can be selected. Must be greater than the `min` prop.. Negative numbers are allowed"
          },
          {
            "prop": "min",
            "description": "The minimum value that can be selected. Negative numbers are allowed"
          },
          {
            "prop": "placeholder",
            "description": "Value to show when the v-model is `null`"
          },
          {
            "prop": "readonly",
            "description": "Places the component in a readonly state"
          },
          {
            "prop": "repeatDelay",
            "description": "Delay in milliseconds after before auto repeat increment or decrement happens. Must be a positive integer. Requires the user to click/keydown and hold"
          },
          {
            "prop": "repeatInterval",
            "description": "Interval in milliseconds between increment or decrement repeats. Must be a positive integer"
          },
          {
            "prop": "repeatStepMultiplier",
            "description": "Number of steps to jump by once the `repeat-threshold` has been reached. Must be a positive integer. This value is also used for the page up and down keys"
          },
          {
            "prop": "repeatThreshold",
            "description": "Number of repeats to occur before increasing the step size by `repeat-step-multiplier`. Must be a positive integer"
          },
          {
            "prop": "required",
            "description": "Adds the `aria-required=\"true\"` attribute on the component. Note this will not prevent for submission when the value is `null`"
          },
          {
            "prop": "step",
            "description": "A positive number that specifies the granularity that the value must adhere to"
          },
          {
            "prop": "value",
            "description": "The value of the spinbutton. Bound to the v-model"
          },
          {
            "prop": "vertical",
            "description": "When set, renders the component with a vertical layout"
          },
          {
            "prop": "wrap",
            "description": "When set, allows the value to wrap around when reaching the minimum or maximum value"
          }
        ],
        "slots": [
          {
            "name": "decrement",
            "version": "2.8.0",
            "description": "Custom content to place in the decrement button",
            "scope": [
              {
                "prop": "hasFocus",
                "type": "Boolean",
                "description": "`true` when the spinbutton has focus"
              }
            ]
          },
          {
            "name": "increment",
            "version": "2.8.0",
            "description": "Custom content to place in the increment button",
            "scope": [
              {
                "prop": "hasFocus",
                "type": "Boolean",
                "description": "`true` when the spinbutton has focus"
              }
            ]
          }
        ],
        "events": [
          {
            "event": "change",
            "description": "Emitted when the user releases the mouse button or key",
            "args": [
              {
                "arg": "value",
                "type": "Number",
                "description": "Current value of the spinbutton"
              }
            ]
          },
          {
            "event": "input",
            "description": "Emitted to update the v-model on each value change",
            "args": [
              {
                "arg": "value",
                "type": "Number",
                "description": "Current value of the spinbutton"
              }
            ]
          }
        ]
      }
    ]
  }
}
