{
  "name": "@bootstrap-vue/table",
  "version": "1.0.0",
  "meta": {
    "title": "Table",
    "description": "For displaying tabular data. <b-table> supports pagination, filtering, sorting, custom rendering, events, and asynchronous data. For simple display of tabular data without all the fancy features, BootstrapVue also provides lightweight alternative components <b-table-lite> and <b-table-simple>",
    "plugins": [
      "TableLitePlugin",
      "TableSimplePlugin"
    ],
    "components": [
      {
        "component": "BTable",
        "events": [
          {
            "event": "row-clicked",
            "description": "Emitted when a row is clicked.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being clicked."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being clicked."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-dblclicked",
            "description": "Emitted when a row is double clicked.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being double clicked."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being double clicked."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-middle-clicked",
            "description": "Emitted when a row is middle clicked.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being middle clicked."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being middle clicked."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-contextmenu",
            "description": "Emitted when a row is right clicked.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being right clicked."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being right clicked."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-hovered",
            "description": "Emitted when a row is hovered.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being hovered."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being hovered."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-unhovered",
            "description": "Emitted when a row is unhovered.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being unhovered."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being unhovered."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-selected",
            "description": "Emitted when a row or rows have been selected or unselected.",
            "args": [
              {
                "arg": "rows",
                "type": "Array",
                "description": "Array of the row items that are selected."
              }
            ]
          },
          {
            "event": "head-clicked",
            "description": "Emitted when a header or footer cell is clicked. Not applicable for 'custom-foot' slot.",
            "args": [
              {
                "arg": "key",
                "type": "String",
                "description": "Column key clicked (field name)."
              },
              {
                "arg": "field",
                "type": "Object",
                "description": "Field definition object."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              },
              {
                "arg": "isFooter",
                "type": "Boolean",
                "description": "'True' if this event originated from clicking on the footer cell"
              }
            ]
          },
          {
            "event": "sort-changed",
            "description": "Emitted when the sorting on the table has changed",
            "args": [
              {
                "arg": "ctx",
                "type": "Object",
                "description": "Table state context object. See docs."
              }
            ]
          },
          {
            "event": "context-changed",
            "description": "Emitted whenever the table state context has changed",
            "args": [
              {
                "arg": "ctx",
                "type": "Object",
                "description": "Table state context object. See docs."
              }
            ]
          },
          {
            "event": "filtered",
            "description": "Emitted when local filtering causes a change in the number of items.",
            "args": [
              {
                "arg": "filteredItems",
                "type": "Array",
                "description": "Array of items after filtering (before local pagination occurs)."
              }
            ]
          },
          {
            "event": "refreshed",
            "description": "Emitted when the items provider function has returned data."
          }
        ],
        "rootEventListeners": [
          {
            "event": "bv::refresh::table",
            "description": "Refresh data of a specific table when this event is emitted on $root",
            "args": [
              {
                "arg": "id",
                "type": "String",
                "description": "table id to refresh data"
              }
            ]
          }
        ],
        "slots": [
          {
            "name": "cell(key)",
            "description": "Scoped slot for custom data rendering of field data. 'key' is the fields key name. See docs for scoped data",
            "scope": [
              {
                "prop": "index",
                "type": "Number",
                "description": "The row's index (zero-based) with respect to the displayed rows"
              },
              {
                "prop": "item",
                "type": "Object",
                "description": "The row's item data object"
              },
              {
                "prop": "value",
                "description": "The value for this key in the record (null or undefined if a virtual column), or the output of the field's formatter function"
              },
              {
                "prop": "unformatted",
                "description": "The raw value for this key in the item record (null or undefined if a virtual column), before being passed to the field's formatter function"
              },
              {
                "prop": "detailsShowing",
                "type": "Boolean",
                "description": "Will be true if the row's row-details scoped slot is visible"
              },
              {
                "prop": "toggleDetails",
                "type": "Function",
                "description": "Can be called to toggle the visibility of the rows row-details scoped slot"
              },
              {
                "prop": "rowSelected",
                "type": "Boolean",
                "description": "Will be true if the row has been selected."
              }
            ]
          },
          {
            "name": "cell()",
            "description": "Default scoped slot for custom data rendering of field data. See docs for scoped data",
            "scope": [
              {
                "prop": "index",
                "type": "Number",
                "description": "The row's index (zero-based) with respect to the displayed rows"
              },
              {
                "prop": "item",
                "type": "Object",
                "description": "The row's item data object"
              },
              {
                "prop": "value",
                "description": "The value for this key in the record (null or undefined if a virtual column), or the output of the field's formatter function"
              },
              {
                "prop": "unformatted",
                "description": "The raw value for this key in the item record (null or undefined if a virtual column), before being passed to the field's formatter function"
              },
              {
                "prop": "detailsShowing",
                "type": "Boolean",
                "description": "Will be true if the row's row-details scoped slot is visible"
              },
              {
                "prop": "toggleDetails",
                "type": "Function",
                "description": "Can be called to toggle the visibility of the rows row-details scoped slot"
              },
              {
                "prop": "rowSelected",
                "type": "Boolean",
                "description": "Will be true if the row has been selected."
              }
            ]
          },
          {
            "name": "head(key)",
            "description": "Scoped slot for custom rendering of field header. 'key' is the fields key name. See docs for scoped header",
            "scope": [
              {
                "prop": "column",
                "type": "String",
                "description": "The fields's key value"
              },
              {
                "prop": "field",
                "type": "Object",
                "description": "the field's definition object (from the fields prop)"
              },
              {
                "prop": "label",
                "type": "String",
                "description": "The fields label value"
              },
              {
                "prop": "selectAllRows",
                "type": "Function",
                "description": "Select all rows (applicable if the table is in selectable mode)"
              },
              {
                "prop": "clearSelected",
                "type": "Function",
                "description": "Unselect all rows (applicable if the table is in selectable mode)"
              },
              {
                "prop": "isFoot",
                "type": "Boolean",
                "description": "Will be true if the slot is being rendered in the table footer"
              }
            ]
          },
          {
            "name": "head()",
            "description": "Default scoped slot for custom rendering of field header. See docs for scoped header",
            "scope": [
              {
                "prop": "column",
                "type": "String",
                "description": "The fields's key value"
              },
              {
                "prop": "field",
                "type": "Object",
                "description": "the field's definition object (from the fields prop)"
              },
              {
                "prop": "label",
                "type": "String",
                "description": "The fields label value"
              },
              {
                "prop": "selectAllRows",
                "type": "Function",
                "description": "Select all rows (applicable if the table is in selectable mode)"
              },
              {
                "prop": "clearSelected",
                "type": "Function",
                "description": "Unselect all rows (applicable if the table is in selectable mode)"
              },
              {
                "prop": "isFoot",
                "type": "Boolean",
                "description": "Will be true if the slot is being rendered in the table footer"
              }
            ]
          },
          {
            "name": "foot(key)",
            "description": "Scoped slot for custom rendering of field footer. 'key' is the fields key name. See docs for scoped footer",
            "scope": [
              {
                "prop": "column",
                "type": "String",
                "description": "The fields's key value"
              },
              {
                "prop": "field",
                "type": "Object",
                "description": "the field's definition object (from the fields prop)"
              },
              {
                "prop": "label",
                "type": "String",
                "description": "The fields label value"
              },
              {
                "prop": "selectAllRows",
                "type": "Function",
                "description": "Select all rows (applicable if the table is in selectable mode)"
              },
              {
                "prop": "clearSelected",
                "type": "Function",
                "description": "Unselect all rows (applicable if the table is in selectable mode)"
              }
            ]
          },
          {
            "name": "foot()",
            "description": "Default scoped slot for custom rendering of field footer. See docs for scoped footer",
            "scope": [
              {
                "prop": "column",
                "type": "String",
                "description": "The fields's key value"
              },
              {
                "prop": "field",
                "type": "Object",
                "description": "the field's definition object (from the fields prop)"
              },
              {
                "prop": "label",
                "type": "String",
                "description": "The fields label value"
              },
              {
                "prop": "selectAllRows",
                "type": "Function",
                "description": "Select all rows (applicable if the table is in selectable mode)"
              },
              {
                "prop": "clearSelected",
                "type": "Function",
                "description": "Unselect all rows (applicable if the table is in selectable mode)"
              }
            ]
          },
          {
            "name": "table-caption",
            "description": "Content to display in the table's caption element"
          },
          {
            "name": "table-colgroup",
            "description": "Slot to place custom colgroup and col elements. Optionally scoped",
            "scope": [
              {
                "prop": "columns",
                "type": "Number",
                "description": "the number of columns in the table"
              },
              {
                "prop": "fields",
                "type": "Array",
                "description": "Array of field definition objects"
              }
            ]
          },
          {
            "name": "table-busy",
            "description": "Optional slot to place loading message when table is in the busy state"
          },
          {
            "name": "row-details",
            "description": "Scoped slot for optional rendering additional record details. See docs for Row details support",
            "scope": [
              {
                "prop": "item",
                "type": "Object",
                "description": "The entire row's record data object"
              },
              {
                "prop": "index",
                "type": "Number",
                "description": "The item's row index number (with respect to the displayed item rows)"
              },
              {
                "prop": "fields",
                "type": "Array",
                "description": "The normalized fields definition array (in the array of objects format)"
              },
              {
                "prop": "toggleDetails",
                "type": "Function",
                "description": "Function to toggle visibility of the row's details slot"
              }
            ]
          },
          {
            "name": "empty",
            "description": "Content to display when no items are present in the `items` array. Optionally scoped",
            "scope": [
              {
                "prop": "fields",
                "type": "Array",
                "description": "The normalized fields definition array (in the array of objects format)"
              },
              {
                "prop": "items",
                "type": "Array",
                "description": "The items array. Exposed here to check null vs []"
              },
              {
                "prop": "emptyText",
                "type": "String",
                "description": "The value of the empty-text prop"
              },
              {
                "prop": "emptyHtml",
                "type": "String",
                "description": "The value of the empty-html prop"
              },
              {
                "prop": "emptyFilteredText",
                "type": "String",
                "description": "The value of the empty-filtered-text prop"
              },
              {
                "prop": "emptyFilteredHtml",
                "type": "String",
                "description": "The value of the empty-filtered-html prop"
              }
            ]
          },
          {
            "name": "emptyfiltered",
            "description": "Content to display when no items are present in the filtered `items` array. Optionally scoped",
            "scope": [
              {
                "prop": "fields",
                "type": "Array",
                "description": "The normalized fields definition array (in the array of objects format)"
              },
              {
                "prop": "items",
                "type": "Array",
                "description": "The items array. Exposed here to check null vs []"
              },
              {
                "prop": "emptyText",
                "type": "String",
                "description": "The value of the empty-text prop"
              },
              {
                "prop": "emptyHtml",
                "type": "String",
                "description": "The value of the empty-html prop"
              },
              {
                "prop": "emptyFilteredText",
                "type": "String",
                "description": "The value of the empty-filtered-text prop"
              },
              {
                "prop": "emptyFilteredHtml",
                "type": "String",
                "description": "The value of the empty-filtered-html prop"
              }
            ]
          },
          {
            "name": "thead-top",
            "description": "Slot above the column headers in the `thead` element for user-supplied B-TR's with B-TH/B-TD. Optionally scoped.",
            "scope": [
              {
                "prop": "columns",
                "type": "Number",
                "description": "the number of columns in the table"
              },
              {
                "prop": "fields",
                "type": "Array",
                "description": "The normalized fields definition array (in the array of objects format)"
              },
              {
                "prop": "selectAllRows",
                "type": "Function",
                "description": "Select all rows (applicable if the table is in selectable mode)"
              },
              {
                "prop": "clearSelected",
                "type": "Function",
                "description": "Unselect all rows (applicable if the table is in selectable mode)"
              }
            ]
          },
          {
            "name": "top-row",
            "description": "Fixed top row slot for user supplied B-TD cells. Optionally scoped",
            "scope": [
              {
                "prop": "columns",
                "type": "Number",
                "description": "the number of columns in the table"
              },
              {
                "prop": "fields",
                "type": "Array",
                "description": "The normalized fields definition array (in the array of objects format)"
              }
            ]
          },
          {
            "name": "bottom-row",
            "description": "Fixed bottom row slot for user supplied B-TD cells. Optionally Scoped",
            "scope": [
              {
                "prop": "columns",
                "type": "Number",
                "description": "the number of columns in the table"
              },
              {
                "prop": "fields",
                "type": "Array",
                "description": "The normalized fields definition array (in the array of objects format)"
              }
            ]
          },
          {
            "name": "custom-foot",
            "description": "Custom footer content slot for user supplied B-TR, B-TH, B-TD. Optionally Scoped",
            "scope": [
              {
                "prop": "columns",
                "type": "Number",
                "description": "the number of columns in the table"
              },
              {
                "prop": "fields",
                "type": "Array",
                "description": "The normalized fields definition array (in the array of objects format)"
              },
              {
                "prop": "items",
                "type": "Array",
                "description": "Array of items that are currently being displayed"
              }
            ]
          }
        ]
      },
      {
        "component": "BTableLite",
        "events": [
          {
            "event": "row-clicked",
            "description": "Emitted when a row is clicked.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being clicked."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being clicked."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-dblclicked",
            "description": "Emitted when a row is double clicked.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being double clicked."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being double clicked."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-middle-clicked",
            "description": "Emitted when a row is middle clicked.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being middle clicked."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being middle clicked."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-contextmenu",
            "description": "Emitted when a row is right clicked.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being right clicked."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being right clicked."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-hovered",
            "description": "Emitted when a row is hovered.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being hovered."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being hovered."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "row-unhovered",
            "description": "Emitted when a row is unhovered.",
            "args": [
              {
                "arg": "item",
                "type": "Object",
                "description": "Item data of the row being unhovered."
              },
              {
                "arg": "index",
                "type": "Number",
                "description": "Index of the row being unhovered."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              }
            ]
          },
          {
            "event": "head-clicked",
            "description": "Emitted when a header or footer cell is clicked. Not applicable for 'custom-foot' slot.",
            "args": [
              {
                "arg": "key",
                "type": "String",
                "description": "Column key clicked (field name)."
              },
              {
                "arg": "field",
                "type": "Object",
                "description": "Field definition object."
              },
              {
                "arg": "event",
                "type": "MouseEvent",
                "description": "Native event object."
              },
              {
                "arg": "isFooter",
                "type": "Boolean",
                "description": "'True' if this event originated from clicking on the footer cell"
              }
            ]
          }
        ],
        "slots": [
          {
            "name": "cell(key)",
            "description": "Scoped slot for custom data rendering of field data. 'key' is the fields key name.",
            "scope": [
              {
                "prop": "index",
                "type": "Number",
                "description": "The row's index (zero-based) with respect to the displayed rows"
              },
              {
                "prop": "item",
                "type": "Object",
                "description": "The row's item data object"
              },
              {
                "prop": "value",
                "description": "The value for this key in the record (null or undefined if a virtual column), or the output of the field's formatter function"
              },
              {
                "prop": "unformatted",
                "description": "The raw value for this key in the item record (null or undefined if a virtual column), before being passed to the field's formatter function"
              },
              {
                "prop": "detailsShowing",
                "type": "Boolean",
                "description": "Will be true if the row's row-details scoped slot is visible"
              },
              {
                "prop": "toggleDetails",
                "type": "Function",
                "description": "Can be called to toggle the visibility of the rows row-details scoped slot"
              }
            ]
          },
          {
            "name": "cell()",
            "description": "Default scoped slot for custom data rendering of field data.",
            "scope": [
              {
                "prop": "index",
                "type": "Number",
                "description": "The row's index (zero-based) with respect to the displayed rows"
              },
              {
                "prop": "item",
                "type": "Object",
                "description": "The row's item data object"
              },
              {
                "prop": "value",
                "description": "The value for this key in the record (null or undefined if a virtual column), or the output of the field's formatter function"
              },
              {
                "prop": "unformatted",
                "description": "The raw value for this key in the item record (null or undefined if a virtual column), before being passed to the field's formatter function"
              },
              {
                "prop": "detailsShowing",
                "type": "Boolean",
                "description": "Will be true if the row's row-details scoped slot is visible"
              },
              {
                "prop": "toggleDetails",
                "type": "Function",
                "description": "Can be called to toggle the visibility of the rows row-details scoped slot"
              }
            ]
          },
          {
            "name": "head(key)",
            "description": "Scoped slot for custom rendering of field header. 'key' is the fields key name",
            "scope": [
              {
                "prop": "column",
                "type": "String",
                "description": "The fields's key value"
              },
              {
                "prop": "field",
                "type": "Object",
                "description": "the field's definition object (from the fields prop)"
              },
              {
                "prop": "label",
                "type": "String",
                "description": "The fields label value"
              },
              {
                "prop": "isFoot",
                "type": "Boolean",
                "description": "Will be true if the slot is being rendered in the table footer"
              }
            ]
          },
          {
            "name": "head()",
            "description": "Default scoped slot for custom rendering of field header.",
            "scope": [
              {
                "prop": "column",
                "type": "String",
                "description": "The fields's key value"
              },
              {
                "prop": "field",
                "type": "Object",
                "description": "the field's definition object (from the fields prop)"
              },
              {
                "prop": "label",
                "type": "String",
                "description": "The fields label value"
              },
              {
                "prop": "isFoot",
                "type": "Boolean",
                "description": "Will be true if the slot is being rendered in the table footer"
              }
            ]
          },
          {
            "name": "foot(key)",
            "description": "Scoped slot for custom rendering of field footer. 'key' is the fields key name.",
            "scope": [
              {
                "prop": "column",
                "type": "String",
                "description": "The fields's key value"
              },
              {
                "prop": "field",
                "type": "Object",
                "description": "the field's definition object (from the fields prop)"
              },
              {
                "prop": "label",
                "type": "String",
                "description": "The fields label value"
              }
            ]
          },
          {
            "name": "foot()",
            "description": "Default scoped slot for custom rendering of field footer",
            "scope": [
              {
                "prop": "column",
                "type": "String",
                "description": "The fields's key value"
              },
              {
                "prop": "field",
                "type": "Object",
                "description": "the field's definition object (from the fields prop)"
              },
              {
                "prop": "label",
                "type": "String",
                "description": "The fields label value"
              }
            ]
          },
          {
            "name": "table-caption",
            "description": "Content to display in the table's caption element"
          },
          {
            "name": "table-colgroup",
            "description": "Slot to place custom colgroup and col elements. Optionally scoped",
            "scope": [
              {
                "prop": "columns",
                "type": "Number",
                "description": "the number of columns in the table"
              },
              {
                "prop": "fields",
                "type": "Array",
                "description": "Array of field definition objects"
              }
            ]
          },
          {
            "name": "row-details",
            "description": "Scoped slot for optional rendering additional record details. See docs for Row details support",
            "scope": [
              {
                "prop": "item",
                "type": "Object",
                "description": "The entire row's record data object"
              },
              {
                "prop": "index",
                "type": "Number",
                "description": "The item's row index number (with respect to the displayed item rows)"
              },
              {
                "prop": "fields",
                "type": "Array",
                "description": "The normalized fields definition array (in the array of objects format)"
              },
              {
                "prop": "toggleDetails",
                "type": "Function",
                "description": "Function to toggle visibility of the row's details slot"
              }
            ]
          },
          {
            "name": "thead-top",
            "description": "Slot above the column headers in the `thead` element for user-supplied B-TR with B-TH/B-TD. Optionally scoped.",
            "scope": [
              {
                "prop": "columns",
                "type": "Number",
                "description": "the number of columns in the table"
              },
              {
                "prop": "fields",
                "type": "Array",
                "description": "The normalized fields definition array (in the array of objects format)"
              },
              {
                "prop": "selectAllRows",
                "type": "Function",
                "description": "Select all rows (applicable if the table is in selectable mode)"
              },
              {
                "prop": "clearSelected",
                "type": "Function",
                "description": "Unselect all rows (applicable if the table is in selectable mode)"
              }
            ]
          },
          {
            "name": "custom-foot",
            "description": "Custom footer content slot for user supplied B-TR's with B-TH/B-TD. Optionally Scoped",
            "scope": [
              {
                "prop": "columns",
                "type": "Number",
                "description": "the number of columns in the table"
              },
              {
                "prop": "fields",
                "type": "Array",
                "description": "The normalized fields definition array (in the array of objects format)"
              },
              {
                "prop": "items",
                "type": "Array",
                "description": "Array of items that are currently being displayed"
              }
            ]
          }
        ]
      },
      {
        "component": "BTableSimple"
      },
      {
        "component": "BTbody"
      },
      {
        "component": "BThead"
      },
      {
        "component": "BTfoot"
      },
      {
        "component": "BTr"
      },
      {
        "component": "BTd"
      },
      {
        "component": "BTh"
      }
    ]
  }
}
