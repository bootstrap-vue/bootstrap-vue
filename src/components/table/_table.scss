.table.b-table {
  // --- General styling ---

  // Table fixed header width layout
  &.b-table-fixed {
    // Fixed width columns
    table-layout: fixed;
  }

  // Table busy styling
  &[aria-busy="true"] {
    opacity: $b-table-busy-opacity;
  }

  // Details row styling
  > tbody > tr.b-table-details > td {
    border-top: none !important;
  }

  // Caption positioning
  > caption {
    caption-side: bottom;

    &.b-table-caption-top {
      caption-side: top !important;
    }
  }
}

// --- Header sort styling ---
.table.b-table {
  > thead,
  > tfoot {
    > tr {
      > th {
        &[aria-sort] {
          // `&.sorting`
          cursor: pointer;

          // Up/down sort=null indicator
          &::before {
            display: inline-block;
            float: right;
            margin-left: $b-table-sort-icon-margin-left;
            width: $b-table-sort-icon-width;
            font-size: inherit;
            line-height: inherit;
            opacity: 0.4;
            content: $b-table-sort-icon-null; // Up/down arrow
            speak: none;
          }

          // Ascending indicator
          &[aria-sort="ascending"]::before {
            // `&.sorting_asc::after.sorting_asc`
            opacity: 1;
            content: $b-table-sort-icon-ascending; // Down arrow
          }

          // Descending indicator
          &[aria-sort="descending"]::before {
            // `&.sorting_desc::after`
            opacity: 1;
            content: $b-table-sort-icon-descending; // Up arrow
          }
        }
      }
    }
  }
}

// --- Stacked tables ---
.table.b-table {
  &.b-table-stacked {
    @each $breakpoint in map-keys($grid-breakpoints) {
      $next: breakpoint-next($breakpoint, $grid-breakpoints);
      $infix: breakpoint-infix($next, $grid-breakpoints);

      &#{$infix} {
        @include media-breakpoint-down($breakpoint) {
          display: block;
          width: 100%;

          // Convert to blocks when stacked
          > caption,
          > tbody,
          > tbody > tr,
          > tbody > tr > td,
          > tbody > tr > td {
            display: block;
          }

          // Hide when stacked
          > thead,
          > tfoot {
            display: none;

            > tr.b-table-top-row,
            > tr.b-table-bottom-row {
              display: none;
            }
          }

          // Caption positioning
          > caption {
            caption-side: top !important;
          }

          > tbody {
            > tr {
              // Turn cells with labels into micro-grids
              > [data-label] {
                // Cell header label pseudo element
                &::before {
                  content: attr(data-label);
                  display: inline-block;
                  width: $b-table-stacked-heading-width;
                  float: left;
                  text-align: right;
                  overflow-wrap: break-word;
                  font-weight: bold;
                  font-style: normal;
                  padding: 0;
                  margin: 0;
                }

                // Add clearfix in-case field label wraps
                &::after {
                  display: block;
                  clear: both;
                  content: "";
                }

                // Cell value (we wrap the cell value in a div when stacked)
                > div {
                  display: inline-block;
                  width: calc(100% - #{$b-table-stacked-heading-width});
                  // Add "gap" between "cells"
                  padding: 0 0 0 $b-table-stacked-gap;
                  margin: 0;
                }
              }

              // Dont show the fixed top/bottom rows
              &.top-row,
              &.bottom-row {
                display: none;
              }

              // Give the top cell of each "row" a heavy border
              > :first-child {
                border-top-width: (3 * $table-border-width);
              }
            }
          }
        }
      }
    }
  }
}

// --- Selectable rows ---
.table.b-table {
  &.b-table-selectable {
    & > tbody > tr {
      cursor: pointer;
    }

    &.b-table-selecting {
      // Disabled text-selection when in range mode when
      // at least one row selected
      &.b-table-select-range > tbody > tr {
        user-select: none;
      }
    }
  }
}
