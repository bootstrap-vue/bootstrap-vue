
@if $custom-switch-width == null {
  // Only include this SCSS if not already defined
  // From Boostrap v4.2 SCSS _custom-forms.scss
  // Define default values
  $custom-switch-width:                   $custom-control-indicator-size * 1.75 !default;
  $custom-switch-indicator-border-radius: $custom-control-indicator-size / 2 !default;
  $custom-switch-indicator-size:          calc(#{$custom-control-indicator-size} - #{$custom-control-indicator-border-width * 4}) !default;

  // switches
  //
  // Tweak a few things for switches
  .custom-switch {
    padding-left: $custom-switch-width + $custom-control-gutter;

    .custom-control-label {
      &::before {
        left: -($custom-switch-width + $custom-control-gutter);
        width: $custom-switch-width;
        pointer-events: all;
        border-radius: $custom-switch-indicator-border-radius;
      }

      &::after {
        top: calc(#{(($font-size-base * $line-height-base - $custom-control-indicator-size) / 2)} + #{$custom-control-indicator-border-width * 2});
        left: calc(#{-($custom-switch-width + $custom-control-gutter)} + #{$custom-control-indicator-border-width * 2});
        width: $custom-switch-indicator-size;
        height: $custom-switch-indicator-size;
        background-color: $custom-control-indicator-border-color;
        border-radius: $custom-switch-indicator-border-radius;
        @include transition(transform .15s ease-in-out, $custom-forms-transition);
      }
    }

    .custom-control-input:checked ~ .custom-control-label {
      &::after {
        background-color: $custom-control-indicator-bg;
        transform: translateX($custom-switch-width - $custom-control-indicator-size);
      }
    }

    .custom-control-input:disabled {
      &:checked ~ .custom-control-label::before {
        background-color: $custom-control-indicator-checked-disabled-bg;
      }
    }
  }
}
