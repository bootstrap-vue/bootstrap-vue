name: Build

on:
  push:
    branches:
      - dev
      - master
  pull_request:
    branches:
      - dev
      - master

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [12, 14, 16]

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set Node.js version
        uses: actions/setup-node@v3.5.1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules
        uses: actions/cache@v3.2.2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ matrix.os }}-node-v${{ matrix.node }}-yarn-
            ${{ matrix.os }}-node-v${{ matrix.node }}-
            ${{ matrix.os }}-

      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile --non-interactive

      - name: Build
        run: yarn run build

      - name: BundleWatch
        run: yarn run bundlewatch
        if: matrix.node == '16'
        env:
          BUNDLEWATCH_GITHUB_TOKEN: "${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }}"
